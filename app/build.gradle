apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.project.simoneconigliaro.movies"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Espresso
    def androidx_test_espresso = "3.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$androidx_test_espresso"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_test_espresso"


    // INSTRUMENTATION TESTS (use JUnit4)
    androidTestImplementation 'junit:junit:4.12'

    // AndroidX test
    def androidx_test_version = "1.1.0"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_version"

    // Architecture components testing
    def androidx_arch_test_version = "2.0.1"
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"


    // LOCAL UNIT TESTS (use JUnit5)
    def junit5_version = "5.5.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"

    // -------- MOCKITO
    def mockito_version = "2.19.0"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    def material_version = "1.0.0"
    implementation "com.google.android.material:material:$material_version"

    // Dagger
    def dagger_version = "2.26"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    //Glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // ViewModel and LiveData
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

    // Retrofit and GsonConverter
    def retrofit_version = "2.6.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Okhttp
    def okhttp3_version = "4.4.0"
    implementation("com.squareup.okhttp3:okhttp:$okhttp3_version")

    // RxJava
    def rxjava_version = '2.2.0'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    def rxandroid_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"


    // Reactive Streams (convert Observable to LiveData)
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // Room
    def room_version = "2.2.4"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Cardview
    def card_view_version = "1.0.0"
    implementation "androidx.cardview:cardview:$card_view_version"
}
